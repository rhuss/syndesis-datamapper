#
# Copyright (C) 2016 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: 2
jobs:
  build:
    working_directory: /workspace
    docker:
    - image: openjdk:8-jdk
    environment:
      MAVEN_OPTS: -Xmx1G
      DOCKER_VERSION: 17.04.0-ce

    steps:
      - setup_remote_docker

      - checkout

      - restore_cache:
          key: ipaas-datamapper-m2

      - run:
          name: Maven
          command: |
            ./mvnw >/dev/null 2>&1 || true
            PATH=$(dirname $(find ~/.m2/wrapper/ -name mvn -print -quit)):$PATH ./mvnw --batch-mode -Pfull -Pfabric8 -Dfabric8.mode=kubernetes install

      - save_cache:
          key: ipaas-datamapper-m2
          paths:
          - ~/.m2

      - run:
          name: Collect junit reports
          command: |
            mkdir ./junit/
            find . -type f -regex ".*/target/.*-reports/.*xml" -exec cp {} ./junit/ \;

      - store_test_results:
          path: ./junit

      - store_artifacts:
          path: ./junit

      - deploy:
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" != "redhat-ipaas" ]; then
              exit 0
            fi

            curl -fsSL https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz | tar xz -C /usr/bin --strip-components 1

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              DOCKER_IMAGE_TAG="latest"
            elif [[ "${CIRCLE_BRANCH}" =~ "^summit-demo" ]]; then
              DOCKER_IMAGE_TAG="${CIRCLE_BRANCH}"
              docker tag atlasmap/ipaas-datamapper:latest atlasmap/ipaas-datamapper:${DOCKER_IMAGE_TAG}
            elif [[ "${CIRCLE_TAG}" =~ "^v[0-9]+(\.[0-9]+){2}" ]]; then
              DOCKER_IMAGE_TAG="${CIRCLE_TAG}"
            fi

            if [ -z "${DOCKER_IMAGE_TAG}" ]; then
              exit 0
            fi

            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push atlasmap/ipaas-datamapper:${DOCKER_IMAGE_TAG} | cat -
